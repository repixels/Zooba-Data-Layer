package pojo;
// Generated May 15, 2016 5:02:58 PM by Hibernate Tools 4.3.1


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Address generated by hbm2java
 */
@Entity
@Table(name="address"
    ,catalog="zooba_db"
    , uniqueConstraints = {@UniqueConstraint(columnNames="landmark"), @UniqueConstraint(columnNames="postal_code")} 
)
public class Address  implements java.io.Serializable {


     private int id;
     private ServiceProvider serviceProvider;
     private String city;
     private String country;
     private String street;
     private String landmark;
     private String others;
     private String postalCode;
     private Float longitude;
     private Float latitude;

    public Address() {
    }

	
    public Address(ServiceProvider serviceProvider, String city, String country, String street) {
        this.serviceProvider = serviceProvider;
        this.city = city;
        this.country = country;
        this.street = street;
    }
    public Address(ServiceProvider serviceProvider, String city, String country, String street, String landmark, String others, String postalCode, Float longitude, Float latitude) {
       this.serviceProvider = serviceProvider;
       this.city = city;
       this.country = country;
       this.street = street;
       this.landmark = landmark;
       this.others = others;
       this.postalCode = postalCode;
       this.longitude = longitude;
       this.latitude = latitude;
    }
   
     @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="serviceProvider"))@Id @GeneratedValue(generator="generator")

    
    @Column(name="id", unique=true, nullable=false)
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }

@OneToOne(fetch=FetchType.LAZY)@PrimaryKeyJoinColumn
    public ServiceProvider getServiceProvider() {
        return this.serviceProvider;
    }
    
    public void setServiceProvider(ServiceProvider serviceProvider) {
        this.serviceProvider = serviceProvider;
    }

    
    @Column(name="city", nullable=false)
    public String getCity() {
        return this.city;
    }
    
    public void setCity(String city) {
        this.city = city;
    }

    
    @Column(name="country", nullable=false)
    public String getCountry() {
        return this.country;
    }
    
    public void setCountry(String country) {
        this.country = country;
    }

    
    @Column(name="street", nullable=false)
    public String getStreet() {
        return this.street;
    }
    
    public void setStreet(String street) {
        this.street = street;
    }

    
    @Column(name="landmark", unique=true)
    public String getLandmark() {
        return this.landmark;
    }
    
    public void setLandmark(String landmark) {
        this.landmark = landmark;
    }

    
    @Column(name="others")
    public String getOthers() {
        return this.others;
    }
    
    public void setOthers(String others) {
        this.others = others;
    }

    
    @Column(name="postal_code", unique=true)
    public String getPostalCode() {
        return this.postalCode;
    }
    
    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
    }

    
    @Column(name="longitude", precision=10, scale=6)
    public Float getLongitude() {
        return this.longitude;
    }
    
    public void setLongitude(Float longitude) {
        this.longitude = longitude;
    }

    
    @Column(name="latitude", precision=10, scale=6)
    public Float getLatitude() {
        return this.latitude;
    }
    
    public void setLatitude(Float latitude) {
        this.latitude = latitude;
    }




}


