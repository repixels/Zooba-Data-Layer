package pojo;
// Generated May 15, 2016 5:02:58 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * MeasuringUnit generated by hbm2java
 */
@Entity
@Table(name="measuring_unit"
    ,catalog="zooba_db"
)
public class MeasuringUnit  implements java.io.Serializable {


     private Integer id;
     private String name;
     private String suffix;
     private String measuringUnitcol;
     private Set<Type> types = new HashSet<Type>(0);

    public MeasuringUnit() {
    }

	
    public MeasuringUnit(String name, String suffix) {
        this.name = name;
        this.suffix = suffix;
    }
    public MeasuringUnit(String name, String suffix, String measuringUnitcol, Set<Type> types) {
       this.name = name;
       this.suffix = suffix;
       this.measuringUnitcol = measuringUnitcol;
       this.types = types;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    
    @Column(name="name", nullable=false, length=100)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="suffix", nullable=false, length=15)
    public String getSuffix() {
        return this.suffix;
    }
    
    public void setSuffix(String suffix) {
        this.suffix = suffix;
    }

    
    @Column(name="measuring_unitcol", length=45)
    public String getMeasuringUnitcol() {
        return this.measuringUnitcol;
    }
    
    public void setMeasuringUnitcol(String measuringUnitcol) {
        this.measuringUnitcol = measuringUnitcol;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="measuringUnit")
    public Set<Type> getTypes() {
        return this.types;
    }
    
    public void setTypes(Set<Type> types) {
        this.types = types;
    }




}


