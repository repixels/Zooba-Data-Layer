package pojo;
// Generated May 15, 2016 5:02:58 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Vehicle generated by hbm2java
 */
@Entity
@Table(name="vehicle"
    ,catalog="zooba_db"
    , uniqueConstraints = @UniqueConstraint(columnNames="licence_plate") 
)
public class Vehicle  implements java.io.Serializable {


     private Integer id;
     private User user;
     private VehicleModel vehicleModel;
     private String name;
     private String licencePlate;
     private int intialOdemeter;
     private int currentOdemeter;
     private Set<TrackingData> trackingDatas = new HashSet<TrackingData>(0);
     private Set<User> users = new HashSet<User>(0);
     private Set<Trips> tripses = new HashSet<Trips>(0);

    public Vehicle() {
    }

	
    public Vehicle(User user, VehicleModel vehicleModel, String name, int intialOdemeter, int currentOdemeter) {
        this.user = user;
        this.vehicleModel = vehicleModel;
        this.name = name;
        this.intialOdemeter = intialOdemeter;
        this.currentOdemeter = currentOdemeter;
    }
    public Vehicle(User user, VehicleModel vehicleModel, String name, String licencePlate, int intialOdemeter, int currentOdemeter, Set<TrackingData> trackingDatas, Set<User> users, Set<Trips> tripses) {
       this.user = user;
       this.vehicleModel = vehicleModel;
       this.name = name;
       this.licencePlate = licencePlate;
       this.intialOdemeter = intialOdemeter;
       this.currentOdemeter = currentOdemeter;
       this.trackingDatas = trackingDatas;
       this.users = users;
       this.tripses = tripses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="admin_id", nullable=false)
    public User getUser() {
        return this.user;
    }
    
    public void setUser(User user) {
        this.user = user;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="vehicle_model_id", nullable=false)
    public VehicleModel getVehicleModel() {
        return this.vehicleModel;
    }
    
    public void setVehicleModel(VehicleModel vehicleModel) {
        this.vehicleModel = vehicleModel;
    }

    
    @Column(name="name", nullable=false, length=50)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="licence_plate", unique=true, length=10)
    public String getLicencePlate() {
        return this.licencePlate;
    }
    
    public void setLicencePlate(String licencePlate) {
        this.licencePlate = licencePlate;
    }

    
    @Column(name="intial_odemeter", nullable=false)
    public int getIntialOdemeter() {
        return this.intialOdemeter;
    }
    
    public void setIntialOdemeter(int intialOdemeter) {
        this.intialOdemeter = intialOdemeter;
    }

    
    @Column(name="current_odemeter", nullable=false)
    public int getCurrentOdemeter() {
        return this.currentOdemeter;
    }
    
    public void setCurrentOdemeter(int currentOdemeter) {
        this.currentOdemeter = currentOdemeter;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="vehicle")
    public Set<TrackingData> getTrackingDatas() {
        return this.trackingDatas;
    }
    
    public void setTrackingDatas(Set<TrackingData> trackingDatas) {
        this.trackingDatas = trackingDatas;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="user_vehicles", catalog="zooba_db", joinColumns = { 
        @JoinColumn(name="vehicle_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="user_id", nullable=false, updatable=false) })
    public Set<User> getUsers() {
        return this.users;
    }
    
    public void setUsers(Set<User> users) {
        this.users = users;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="vehicle")
    public Set<Trips> getTripses() {
        return this.tripses;
    }
    
    public void setTripses(Set<Trips> tripses) {
        this.tripses = tripses;
    }




}


