package pojo;
// Generated May 23, 2016 7:59:43 PM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * ServiceProvider generated by hbm2java
 */
@Entity
@Table(name="service_provider"
    ,catalog="zooba_db"
)
public class ServiceProvider  implements java.io.Serializable {


     private Integer id;
     private ServiceProvider serviceProvider;
     private String name;
     private String email;
     private String website;
     private Set serviceProviderServiceses = new HashSet(0);
     private Address address;
     private Set serviceProviderCalendars = new HashSet(0);
     private Set makes = new HashSet(0);
     private Set serviceProviderPhones = new HashSet(0);
     private Set serviceProviders = new HashSet(0);

    public ServiceProvider() {
    }

    public ServiceProvider(ServiceProvider serviceProvider, String name, String email, String website, Set serviceProviderServiceses, Address address, Set serviceProviderCalendars, Set makes, Set serviceProviderPhones, Set serviceProviders) {
       this.serviceProvider = serviceProvider;
       this.name = name;
       this.email = email;
       this.website = website;
       this.serviceProviderServiceses = serviceProviderServiceses;
       this.address = address;
       this.serviceProviderCalendars = serviceProviderCalendars;
       this.makes = makes;
       this.serviceProviderPhones = serviceProviderPhones;
       this.serviceProviders = serviceProviders;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="service_provide_branch")
    public ServiceProvider getServiceProvider() {
        return this.serviceProvider;
    }
    
    public void setServiceProvider(ServiceProvider serviceProvider) {
        this.serviceProvider = serviceProvider;
    }

    
    @Column(name="name", length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="email", length=62)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

    
    @Column(name="website")
    public String getWebsite() {
        return this.website;
    }
    
    public void setWebsite(String website) {
        this.website = website;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="serviceProvider")
    public Set getServiceProviderServiceses() {
        return this.serviceProviderServiceses;
    }
    
    public void setServiceProviderServiceses(Set serviceProviderServiceses) {
        this.serviceProviderServiceses = serviceProviderServiceses;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="serviceProvider")
    public Address getAddress() {
        return this.address;
    }
    
    public void setAddress(Address address) {
        this.address = address;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="serviceProvider")
    public Set getServiceProviderCalendars() {
        return this.serviceProviderCalendars;
    }
    
    public void setServiceProviderCalendars(Set serviceProviderCalendars) {
        this.serviceProviderCalendars = serviceProviderCalendars;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="make_service_providers", catalog="zooba_db", joinColumns = { 
        @JoinColumn(name="service_provider_id", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="make_id", nullable=false, updatable=false) })
    public Set getMakes() {
        return this.makes;
    }
    
    public void setMakes(Set makes) {
        this.makes = makes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="serviceProvider")
    public Set getServiceProviderPhones() {
        return this.serviceProviderPhones;
    }
    
    public void setServiceProviderPhones(Set serviceProviderPhones) {
        this.serviceProviderPhones = serviceProviderPhones;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="serviceProvider")
    public Set getServiceProviders() {
        return this.serviceProviders;
    }
    
    public void setServiceProviders(Set serviceProviders) {
        this.serviceProviders = serviceProviders;
    }




}


